name: Draft New Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version for the release (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

permissions:
    contents: write 

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23' # Specify the Go version you are using

      - name: Build
        run: |
          mkdir -p output
          if [ "${{ matrix.goos }}" = "windows" ]; then
            GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -ldflags="-X 'vpc-cidr-manager/cmd.Version=${{ github.event.inputs.version }}'" -o output/vpc-cidr-manager-${{ matrix.goos }}-${{ matrix.goarch }}.exe .
          else
            GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -ldflags="-X 'vpc-cidr-manager/cmd.Version=${{ github.event.inputs.version }}'" -o output/vpc-cidr-manager-${{ matrix.goos }}-${{ matrix.goarch }} .
          fi

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: vpc-cidr-manager-${{ matrix.goos }}-${{ matrix.goarch }}
          path: output/

  create_tag:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Git tag
        run: |
          git tag ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
  release:
    runs-on: ubuntu-latest
    needs: create_tag

    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

        
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
            name: vpc-cidr-manager-${{ matrix.goos }}-${{ matrix.goarch }}
            path: artifacts/

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.event.inputs.version }}
          tag_name: ${{ github.event.inputs.version }}
          files: artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
